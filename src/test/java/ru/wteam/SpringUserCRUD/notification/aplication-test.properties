##spring.application.name=SpringUserCRUD Maven Webapp
#spring.datasource.url=jdbc:postgresql://localhost:5432/dbhw2
#spring.datasource.username=postgres
#spring.datasource.password=${POSTGRES_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#
#spring.mail.username=${MAIL_USERNAME}
#spring.mail.password=${MAIL_PASSWORD}
#spring.mail.host=smtp.mail.ru
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#
## Kafka Broker Configuration
#spring.kafka.bootstrap-servers=localhost:9092
#
## Producer Configuration
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
##spring.kafka.producer.acks=all
#
## Consumer Configuration
#spring.kafka.consumer.group-id=my_consumer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true

# application-test.properties

# Настройки GreenMail
greenmail.setup.port=3025 # Порт для SMTP
greenmail.setup.hostname=localhost
greenmail.setup.protocols=smtp,smtps,pop3,pop3s,imap,imaps
greenmail.setup.users= # Можете указать тестовых пользователей, если нужно
greenmail.classpath.config=false

# Настройки Spring Mail для использования GreenMail
spring.mail.host=${greenmail.setup.hostname}
spring.mail.port=${greenmail.setup.port}
spring.mail.username=testuser@example - FORBIDDEN -  # GreenMail не требует реальных учетных данных
spring.mail.password=testpassword
spring.mail.properties.mail.smtp.auth=false # Для GreenMail аутентификация не нужна
spring.mail.properties.mail.smtp.starttls.enable=false # TLS тоже не нужен
spring.mail.properties.mail.smtp.starttls.required=false
